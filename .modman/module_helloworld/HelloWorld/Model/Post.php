<?php
namespace Ecommage\HelloWorld\Model;

use \Magento\Framework\Filter\FilterManager;

class Post extends \Magento\Framework\Model\AbstractModel
{
    const STATUS_ENABLED = 1;
    const STATUS_DISABLED = 0;

    /**
     * @var \Magento\Framework\Filter\FilterManager
     */
    protected $filter;

    public $_storeManager;

    public function __construct(\Magento\Framework\Model\Context $context,
                                \Magento\Framework\Registry $registry,
                                \Magento\Store\Model\StoreManagerInterface $storeManager,
                                \Magento\Framework\Model\ResourceModel\AbstractResource $resource = null,
                                \Magento\Framework\Data\Collection\AbstractDb $resourceCollection = null,
                                array $data = []
                            )
    {
        parent::__construct($context, $registry, $resource, $resourceCollection, $data);
        $this->_storeManager = $storeManager;
    }

    protected function _construct()
    {
        $this->_init('Ecommage\HelloWorld\Model\ResourceModel\Post');
    }
    public function getAvailableStatuses()
    {
        return [self::STATUS_ENABLED => __('Enabled'), self::STATUS_DISABLED => __('Disabled')];
    }

//    public function formatUrlKey($str)
//    {
//        return $this->filter->translitUrl($str);
//    }
    protected function generateCode($name)
    {
        $code = substr(preg_replace('/[^a-z_0-9]/', '_', $name), 0, 30);
        $validatorAttrCode = new \Zend_Validate_Regex(['pattern' => '/^[a-z][a-z_0-9]{0,29}[a-z0-9]$/']);
        if (!$validatorAttrCode->isValid($code)) {
            $code = 'attr_' . ($code ?: substr(md5(time()), 0, 8));
        }
        return $code;
    }

    public function beforeSave()
    {
        $urlkey = $this->getUrlKey();
        $name = $this->getName();
        if (!$urlkey){
            $urlkey = $this->generateCode($name);
        }

        $collection = $this->getCollection();
        //var_dump($collection);die;
        $collection->addFieldToFilter('url_key',$urlkey);
        if ($this->getId()) {
            $collection->addFieldToFilter('post_id', ['nin' => [$this->getId()]]);
        }

        $collectionSize = $collection->getSize();
        if ($collectionSize == 0){
            return $urlkey;
        }else{
            return $urlkey.'-'.time();
        }


//        return parent::beforeSave(); // TODO: Change the autogenerated stub
    }
    public function getImageUrl($attributeCode = 'featured_image')
    {
        $url = false;
        $image = $this->getData($attributeCode);
        if ($image) {
            if (is_string($image)) {

                $store = $this->_storeManager->getStore()->getBaseUrl(\Magento\Framework\UrlInterface::URL_TYPE_MEDIA);
//                var_dump($store);die;
                $isRelativeUrl = substr($image, 0, 1) === '/';

//                $mediaBaseUrl = $store->getBaseUrl(
//                    \Magento\Framework\UrlInterface::URL_TYPE_MEDIA
//                );
                $url = $store . 'helloworld/post/';
//                if ($isRelativeUrl) {
//                    $url = $image;
//                } else {
//                    $url = $mediaBaseUrl
//                        . ltrim(\Magento\Catalog\Model\Category\FileInfo::ENTITY_MEDIA_PATH, '/')
//                        . '/'
//                        . $image;
//                }
            } else {
                throw new \Magento\Framework\Exception\LocalizedException(
                    __('Something went wrong while getting the image url.')
                );
            }
        }
        return $url;
    }
}